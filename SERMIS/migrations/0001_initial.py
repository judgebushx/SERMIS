# Generated by Django 4.2.1 on 2024-05-02 07:33

import SERMIS.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(choices=[('South West', 'South West'), ('West Nile', 'West Nile'), ('Karamoja', 'Karamoja')], max_length=35)),
                ('district', models.CharField(choices=[('Koboko', 'Koboko'), ('Lamwo', 'Lamwo'), ('Isingiro', 'Isingiro'), ('Kamwenge', 'Kamwenge')], max_length=35)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=35)),
                ('nationality', models.CharField(choices=[('Uganda', 'Uganda'), ('Congo', 'Congo'), ('Sundan', 'Sundan'), ('South Sudan', 'South Sudan')], max_length=35)),
                ('household_id', models.CharField(max_length=12)),
                ('name_of_household_head', models.CharField(max_length=50)),
                ('household_head_phone', models.IntegerField(validators=[django.core.validators.MaxValueValidator(999999999, message='9 digits maximum')])),
                ('participant_individual_id', models.CharField(max_length=12)),
                ('name_of_participant', models.CharField(max_length=50)),
                ('gender_of_participant', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('participant_age', models.IntegerField(validators=[django.core.validators.MaxValueValidator(99, message='Maximum age should be 99 years or less.'), django.core.validators.MinValueValidator(0, message='Age cannot be negative.')])),
                ('participant_phone', models.IntegerField(validators=[django.core.validators.MaxValueValidator(999999999, message='9 digits maximum')])),
                ('relationship_with_household_head', models.CharField(choices=[('Head of household', 'Head of household'), ('Spouse/partner', 'Spouse/partner'), ('Son/daughter', 'Son/daughter'), ('Brother/sister', 'Brother/sister'), ('Father/mother', 'Father/mother')], max_length=100)),
                ('gender_hhh', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=35, verbose_name='Gender of HH Head')),
                ('age_of_hhh', models.IntegerField(validators=[django.core.validators.MaxValueValidator(99, message='Maximum age should be 99 years or less.'), django.core.validators.MinValueValidator(0, message='Age cannot be negative.')], verbose_name='Age of HH Head')),
                ('disablity_of_hhh', models.CharField(choices=[('Able bodied', 'Able bodied'), ('Living with a disability', 'Living with a disability')], max_length=35)),
                ('marital_status', models.CharField(choices=[('Married', 'Married'), ('Single', 'Single'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], max_length=35)),
                ('education_level', models.CharField(choices=[('Illiterate', 'Illiterate'), ('Primaryn education', 'Primaryn education'), ('Secondary/High school education', 'Secondary/High school education'), ('Teritary education', 'Teritary education')], max_length=35)),
                ('religion', models.CharField(choices=[('Christian', 'Christian'), ('Muslim', 'Muslim'), ('Traditional African religion', 'Traditional African religion'), ('Atheist', 'Atheist')], max_length=35)),
                ('beneficiary_status', models.CharField(choices=[('Enrolled', 'Enrolled'), ('Temporarily Suspended', 'Temporarily Suspended'), ('Exited', 'Exited'), ('Graduated', 'Graduated'), ('Deceased', 'Deceased'), ('Repatriated', 'Repatriated')], default='Enrolled', max_length=35)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=25)),
                ('group_type', models.CharField(choices=[('General Group', 'General Group'), ('Youth Group', 'Youth Group'), ('Women Group', 'Women Group')], max_length=35)),
                ('status_of_members', models.CharField(choices=[('Refugees', 'Refugees'), ('National', 'National'), ('Mixed', 'Mixed')], default='Refugees', max_length=25)),
                ('chairperson_name', models.CharField(max_length=25)),
                ('chairperson_gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('chairperson_contact', models.CharField(max_length=9)),
                ('alternate_contact', models.CharField(max_length=9)),
                ('district', models.CharField(choices=[('Koboko', 'Koboko'), ('Lamwo', 'Lamwo'), ('Isingiro', 'Isingiro'), ('Kamwenge', 'Kamwenge')], max_length=15)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=20)),
                ('location_status', models.CharField(choices=[('Inside Settlement', 'Inside Settlement'), ('Outside Settlement', 'Outside Settlement')], max_length=25)),
                ('date_formed', models.DateField()),
                ('formation_method', models.CharField(choices=[('Organically formed by community members', 'Organically formed by community members'), ('Formed by an organisation/NGO', 'Formed by an organisation/NGO')], max_length=50)),
                ('total_members_count', models.PositiveIntegerField(editable=False)),
                ('male_members_count', models.PositiveIntegerField(editable=False)),
                ('female_members_count', models.PositiveIntegerField(editable=False)),
                ('num_refugees_count', models.PositiveIntegerField(editable=False)),
                ('male_refugees_count', models.PositiveIntegerField(editable=False)),
                ('female_refugees_count', models.PositiveIntegerField(editable=False)),
                ('num_youth_count', models.PositiveIntegerField(editable=False)),
                ('male_youth_count', models.PositiveIntegerField(editable=False)),
                ('female_youth_count', models.PositiveIntegerField(editable=False)),
                ('num_disabilities_count', models.PositiveIntegerField(editable=False)),
                ('received_support_from_wfp', models.CharField(choices=[('Recieved support from WFP', 'Recieved support from WFP'), ('Never recieved support from WFP', 'Never recieved support from WFP')], max_length=50)),
                ('received_assistance_from_other_partner', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('other_partner_assistance', models.CharField(choices=[('None', 'None'), ('ACF', 'ACF'), ('ALIGHT', 'ALIGHT'), ('AVSC', 'AVSC'), ('CONVOID', 'CONVOID'), ('DRDIP', 'DRDIP'), ('Equity Bank', 'Equity Bank'), ('FRC', 'FRC'), ('Government through DRDIP', 'Government through DRDIP'), ('HIJRA', 'HIJRA'), ('HFU', 'HFU'), ('Isingiro DLG', 'Isingiro DLG'), ('Nsamis (pigglets) 2022', 'Nsamis (pigglets) 2022'), ('OPM', 'OPM'), ('OPPORTUNITY BANK', 'OPPORTUNITY BANK'), ('OXFAM', 'OXFAM'), ('RIPPLE EFFECT', 'RIPPLE EFFECT'), ('SACU', 'SACU'), ('SEND A COW', 'SEND A COW'), ('Shared Action Africa', 'Shared Action Africa'), ('UNDP', 'UNDP'), ('Usabiti- Digitalization of savings, records', 'Usabiti- Digitalization of savings, records'), ('VEDCO', 'VEDCO'), ('WFP', 'WFP'), ('UWESO', 'UWESO')], max_length=255)),
                ('support_received', models.CharField(choices=[('Livestock', 'Livestock'), ('Group savings', 'Group savings'), ('credit/loans', 'credit/loans'), ('group farming.', 'group farming.'), ('Savings box', 'Savings box'), ('Book keeping', 'Book keeping'), ('startup capital', 'startup capital'), ('AMS training', 'AMS training'), ('Seedlings/farm inputs', 'Seedlings/farm inputs'), ('Agric/farming training', 'Agric/farming training'), ('VSLA/livelihood training', 'VSLA/livelihood training'), ('GFA', 'GFA')], max_length=50)),
                ('crop_farming', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('animal_farming', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('savings_and_loans', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('involved_in_crafts', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('tech_vocational_skills', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('engaged_in_trading', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('incomes_last_12_months', models.PositiveIntegerField()),
                ('group_assets_value', models.PositiveIntegerField()),
                ('group_loans', models.PositiveIntegerField()),
                ('group_has_bank_account', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('current_incomes', models.PositiveIntegerField()),
                ('gps_for_group', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='NutricashBeneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profiling_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('nutricash_beneficiary_name', models.CharField(max_length=30)),
                ('ID_type', models.CharField(choices=[('NIN', 'NIN'), ('Attestation Individual Number', 'Attestation Individual Number'), ('KSRN Number', 'KSRN Number'), ('Next of Kin NIN', 'Next of Kin NIN'), ('Next of Kin AIN', 'Next of Kin AIN'), ('Other government issued ID', 'Other government issued ID')], default='NIN', max_length=30)),
                ('ID_number', models.CharField(max_length=16)),
                ('age', models.IntegerField(validators=[django.core.validators.MaxValueValidator(99, message='2 digits maximum')])),
                ('enrollment_gestational_age', models.IntegerField(validators=[django.core.validators.MaxValueValidator(99, message='2 digits maximum')])),
                ('expected_delivery_date', models.DateField()),
                ('pregnant_or_lactating', models.CharField(choices=[('Pregnant', 'Pregnant'), ('Lactating', 'Lactating'), ('Pregnant & Lactating', 'Pregnant & Lactating')], max_length=22)),
                ('beneficiary_status', models.CharField(choices=[('Enrolled', 'Enrolled'), ('Re-enrolled', 'Re-enrolled'), ('Exited', 'Exited'), ('Temporarily transferred to TSFP', 'Temporarily transferred to TSFP')], max_length=32)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('actual_nationality', models.CharField(blank=True, max_length=35)),
                ('actual_region', models.CharField(blank=True, max_length=35)),
                ('actual_district', models.CharField(blank=True, max_length=35)),
                ('actual_settlement', models.CharField(blank=True, max_length=35)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_beneficiaries_district', to='SERMIS.beneficiary')),
                ('group_representative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_beneficiaries_group_representative', to='SERMIS.beneficiary')),
                ('nationality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_beneficiary_nationality', to='SERMIS.beneficiary')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_beneficiaries_region', to='SERMIS.beneficiary')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_beneficiaries_settlement', to='SERMIS.beneficiary')),
            ],
        ),
        migrations.CreateModel(
            name='SAGEBeneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profiling_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('candidate_name', models.CharField(max_length=50)),
                ('candidate_dob', models.DateField()),
                ('candidate_gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=8)),
                ('ID_type', models.CharField(choices=[('NIN', 'NIN'), ('Attestation Individual Number', 'Attestation Individual Number'), ('KSRN Number', 'KSRN Number'), ('Next of Kin NIN', 'Next of Kin NIN'), ('Next of Kin AIN', 'Next of Kin AIN'), ('Other government issued ID', 'Other government issued ID')], default='NIN', max_length=30)),
                ('candidate_individual_id', models.CharField(max_length=12)),
                ('beneficiary_status', models.CharField(choices=[('Enrolled', 'Enrolled'), ('Re-enrolled', 'Re-enrolled'), ('Exited', 'Exited'), ('Temporarily transferred to TSFP', 'Temporarily transferred to TSFP')], max_length=32)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('actual_nationality', models.CharField(blank=True, max_length=35)),
                ('actual_region', models.CharField(blank=True, max_length=35)),
                ('actual_district', models.CharField(blank=True, max_length=35)),
                ('actual_settlement', models.CharField(blank=True, max_length=35)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_beneficiaries_district', to='SERMIS.beneficiary')),
                ('group_representative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_beneficiaries_group_representative', to='SERMIS.beneficiary')),
                ('household_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_beneficiaries_household_id', to='SERMIS.beneficiary')),
                ('nationality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_beneficiaries_nationality', to='SERMIS.beneficiary')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_beneficiaries_region', to='SERMIS.beneficiary')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_beneficiaries_settlement', to='SERMIS.beneficiary')),
            ],
        ),
        migrations.CreateModel(
            name='SPSAGEdetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('disbursement_date', models.DateField()),
                ('sage_beneficiary_age', models.IntegerField(validators=[SERMIS.models.SPSAGEdetails.validate_sage_beneficiary_age])),
                ('transfer_value', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(999999999)])),
                ('component', models.CharField(default='SP', max_length=10)),
                ('actual_region', models.CharField(max_length=35)),
                ('actual_district', models.CharField(max_length=35)),
                ('actual_settlement', models.CharField(max_length=35)),
                ('actual_group', models.CharField(max_length=100)),
                ('ID_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_id_number', to='SERMIS.nutricashbeneficiary')),
                ('ID_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_id_type', to='SERMIS.nutricashbeneficiary')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_district', to='SERMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_group', to='SERMIS.group')),
                ('name_of_participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_participant', to='SERMIS.beneficiary')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_region', to='SERMIS.beneficiary')),
                ('sage_beneficiary_dob', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_dob', to='SERMIS.sagebeneficiary')),
                ('sage_beneficiary_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_beneficiary', to='SERMIS.sagebeneficiary')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sage_settlement', to='SERMIS.beneficiary')),
            ],
            options={
                'verbose_name_plural': 'SAGE Details',
            },
        ),
        migrations.CreateModel(
            name='SPNutricashDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('disbursement_date', models.DateField()),
                ('pregnant_or_lactating', models.CharField(choices=[('Pregnant', 'Pregnant'), ('Lactating', 'Lactating'), ('Pregnant & Lactating', 'Pregnant & Lactating')], max_length=22)),
                ('transfer_value', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(999999999)])),
                ('component', models.CharField(default='SP', max_length=10)),
                ('actual_nationality', models.CharField(max_length=30)),
                ('actual_region', models.CharField(max_length=30)),
                ('actual_district', models.CharField(max_length=30)),
                ('actual_settlement', models.CharField(max_length=30)),
                ('actual_ID_type', models.CharField(max_length=30)),
                ('actual_ID_number', models.CharField(max_length=16)),
                ('ID_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_id_number', to='SERMIS.nutricashbeneficiary')),
                ('ID_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_id_type', to='SERMIS.nutricashbeneficiary')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_district', to='SERMIS.nutricashbeneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_group', to='SERMIS.group')),
                ('group_representative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_group_representative', to='SERMIS.beneficiary')),
                ('nationality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_nationality', to='SERMIS.nutricashbeneficiary')),
                ('nutricash_beneficiary_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_beneficiaryname', to='SERMIS.nutricashbeneficiary')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_region', to='SERMIS.nutricashbeneficiary')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutricash_settlement', to='SERMIS.nutricashbeneficiary')),
            ],
            options={
                'verbose_name_plural': 'Nutricash Details',
            },
        ),
        migrations.CreateModel(
            name='SPGFA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('disbursement_date', models.DateField()),
                ('household_beneficiary_name', models.CharField(max_length=25)),
                ('transfer_value', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(999999999)])),
                ('component', models.CharField(default='SP', max_length=10)),
                ('actual_region', models.CharField(max_length=35)),
                ('actual_district', models.CharField(max_length=35)),
                ('actual_settlement', models.CharField(max_length=35)),
                ('actual_group', models.CharField(max_length=100)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gfa_beneficiary', to='SERMIS.beneficiary')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gfa_district', to='SERMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gfa_group', to='SERMIS.group')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gfa_region', to='SERMIS.beneficiary')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gfa_settlement', to='SERMIS.beneficiary')),
            ],
            options={
                'verbose_name_plural': 'GFA Details',
            },
        ),
        migrations.CreateModel(
            name='SEMCSBCC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('meeting_date', models.DateField()),
                ('topic_of_discussion', models.CharField(choices=[('Gender', 'Gender'), ('WASH', 'WASH'), ('Communication and life skills', 'Communication and life skills')], max_length=100)),
                ('component', models.CharField(default='SEMC', max_length=10)),
                ('actual_group', models.CharField(max_length=100)),
                ('actual_region', models.CharField(max_length=35)),
                ('actual_district', models.CharField(max_length=35)),
                ('actual_settlement', models.CharField(max_length=35)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sbcc_beneficiary', to='SERMIS.beneficiary')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sbcc_district', to='SERMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sbcc_group', to='SERMIS.group')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sbcc_region', to='SERMIS.beneficiary')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sbcc_settlement', to='SERMIS.beneficiary')),
            ],
            options={
                'verbose_name_plural': 'SBCC Details',
            },
        ),
        migrations.CreateModel(
            name='SEMCMentoringCoaching',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('meeting_date', models.DateField()),
                ('mentor_name', models.CharField(max_length=30)),
                ('topic_of_discussion', models.CharField(choices=[('On farm', 'On farm'), ('Non farm', 'Non farm')], max_length=100)),
                ('component', models.CharField(default='SEMC', max_length=10)),
                ('actual_group', models.CharField(max_length=100)),
                ('actual_region', models.CharField(max_length=35)),
                ('actual_district', models.CharField(max_length=35)),
                ('actual_settlement', models.CharField(max_length=35)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentoring_coaching_beneficiary', to='SERMIS.beneficiary')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentoring_coaching_district', to='SERMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentoring_coaching_group', to='SERMIS.group')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentoring_coaching_region', to='SERMIS.beneficiary')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentoring_coaching_settlement', to='SERMIS.beneficiary')),
            ],
            options={
                'verbose_name_plural': 'Mentoring and Coaching Details',
            },
        ),
        migrations.CreateModel(
            name='SEMCCommunityParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('meeting_date', models.DateField()),
                ('topic_of_discussion', models.CharField(choices=[('Gender', 'Gender'), ('WASH', 'WASH'), ('Communication and life skills', 'Communication and life skills')], max_length=100)),
                ('component', models.CharField(default='SEMC', max_length=10)),
                ('actual_group', models.CharField(max_length=100)),
                ('actual_region', models.CharField(max_length=35)),
                ('actual_district', models.CharField(max_length=35)),
                ('actual_settlement', models.CharField(max_length=35)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_participation_beneficiary', to='SERMIS.beneficiary')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_participation_district', to='SERMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_participation_group', to='SERMIS.group')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_participation_region', to='SERMIS.beneficiary')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_participation_settlement', to='SERMIS.beneficiary')),
            ],
            options={
                'verbose_name_plural': 'Community Participation Details',
            },
        ),
        migrations.CreateModel(
            name='LPDOnFarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('value_date', models.DateField()),
                ('Onfarm_component_received', models.CharField(choices=[('None', 'None'), ('Acquired access to land', 'Acquired access to land'), ('Conducting large scale production (1 acre and above)', 'Conducting large scale production (1 acre and above)'), ('Adoption of climate smart production', 'Adoption of climate smart production'), ('Acquired access to water for production', 'Acquired access to water for production'), ('Conducting back yard gardening', 'Conducting back yard gardening'), ('On-farm PHM practices', 'On-farm PHM practices')], max_length=100, verbose_name='On-Farm Component received')),
                ('component', models.CharField(default='LPD', max_length=10)),
                ('actual_region', models.CharField(max_length=35)),
                ('actual_district', models.CharField(max_length=35)),
                ('actual_settlement', models.CharField(max_length=35)),
                ('actual_group', models.CharField(max_length=100)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_onfarm_district', to='SERMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_onfarm_group', to='SERMIS.group')),
                ('name_of_participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_onfarm_participant', to='SERMIS.beneficiary')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_onfarm_region', to='SERMIS.beneficiary')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_onfarm_settlement', to='SERMIS.beneficiary')),
            ],
            options={
                'verbose_name_plural': 'LPD On-Farm Details',
            },
        ),
        migrations.CreateModel(
            name='LPDOffFarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('value_date', models.DateField()),
                ('Offfarm_Software_component_received', models.CharField(choices=[('None', 'None'), ('Training-Post harvest management', 'Training-Post harvest management'), ('Market linkages(Big buyers)', 'Market linkages -Big buyers'), ('Bulking - Storage infrastructure/tonnage', 'Bulking- Storage infrastructure/tonnage')], max_length=100, verbose_name='Software Component received')),
                ('Offfarm_Hardware_component_received', models.CharField(choices=[('None', 'None'), ('Hermetic silos', 'Hermetic silos'), ('Mills', 'Mills'), ('Threshers', 'Threshers'), ('Transport facilities etc', 'Transport facilities etc')], max_length=100, verbose_name='Hardware Component received')),
                ('component', models.CharField(default='LPD', max_length=10)),
                ('actual_region', models.CharField(max_length=35)),
                ('actual_district', models.CharField(max_length=35)),
                ('actual_settlement', models.CharField(max_length=35)),
                ('actual_group', models.CharField(max_length=100)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_offfarm_district', to='SERMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_offfarm_group', to='SERMIS.group')),
                ('name_of_participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_offfarm_participant', to='SERMIS.beneficiary')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_offfarm_region', to='SERMIS.beneficiary')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_offfarm_settlement', to='SERMIS.beneficiary')),
            ],
            options={
                'verbose_name_plural': 'LPD Off-Farm Details',
            },
        ),
        migrations.CreateModel(
            name='LPDNonFarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('value_date', models.DateField()),
                ('nonfarm_Software_component_received', models.CharField(choices=[('None', 'None'), ('Skill acquisition training', 'Skill acquisition training'), ('Apprenticeship', 'Apprenticeship')], max_length=100, verbose_name='Software Component received')),
                ('nonfarm_Hardware_component_received', models.CharField(choices=[('None', 'None'), ('Start-up capital received', 'Start-up capital received')], max_length=100, verbose_name='Hardware Component received')),
                ('component', models.CharField(default='LPD', max_length=10)),
                ('actual_region', models.CharField(max_length=35)),
                ('actual_district', models.CharField(max_length=35)),
                ('actual_settlement', models.CharField(max_length=35)),
                ('actual_group', models.CharField(max_length=100)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_nonfarm_district', to='SERMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_nonfarm_group', to='SERMIS.group')),
                ('name_of_participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_nonfarm_participant', to='SERMIS.beneficiary')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_nonfarm_region', to='SERMIS.beneficiary')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lpd_nonfarm_settlement', to='SERMIS.beneficiary')),
            ],
            options={
                'verbose_name_plural': 'LPD Non-Farm Details',
            },
        ),
        migrations.CreateModel(
            name='FinlitBeneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profiling_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('candidate_name', models.CharField(max_length=50)),
                ('candidate_age', models.IntegerField(validators=[django.core.validators.MaxValueValidator(99, message='2 digits maximum')])),
                ('candidate_gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=8)),
                ('ID_type', models.CharField(choices=[('NIN', 'NIN'), ('Attestation Individual Number', 'Attestation Individual Number'), ('KSRN Number', 'KSRN Number'), ('Next of Kin NIN', 'Next of Kin NIN'), ('Next of Kin AIN', 'Next of Kin AIN'), ('Other government issued ID', 'Other government issued ID')], default='NIN', max_length=30)),
                ('candidate_individual_id', models.CharField(max_length=12)),
                ('beneficiary_status', models.CharField(choices=[('Enrolled', 'Enrolled'), ('Re-enrolled', 'Re-enrolled'), ('Exited', 'Exited'), ('Temporarily transferred to TSFP', 'Temporarily transferred to TSFP')], max_length=32)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finlit_beneficiaries_district', to='SERMIS.beneficiary')),
                ('group_representative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finlit_beneficiaries_group_representative', to='SERMIS.beneficiary')),
                ('household_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finlit_beneficiaries_household_id', to='SERMIS.beneficiary')),
                ('nationality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finlit_beneficiaries_nationality', to='SERMIS.beneficiary')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finlit_beneficiaries_region', to='SERMIS.beneficiary')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finlit_beneficiaries_settlement', to='SERMIS.beneficiary')),
            ],
        ),
        migrations.CreateModel(
            name='DFI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('value_date', models.DateField()),
                ('DFI_Software_component_received', models.CharField(choices=[('Basic financial literacy training received', 'Basic financial literacy training received'), ('Advanced financial literacy trainings received', 'Advanced financial literacy trainings received'), ('Digital literacy training received', 'Digital literacy training received')], max_length=100, verbose_name='Software Component received')),
                ('component', models.CharField(default='LPD', max_length=10)),
                ('actual_region', models.CharField(max_length=35)),
                ('actual_district', models.CharField(max_length=35)),
                ('actual_settlement', models.CharField(max_length=35)),
                ('actual_group', models.CharField(max_length=100)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dfi_district', to='SERMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dfi_group', to='SERMIS.group')),
                ('name_of_participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dfi_participant', to='SERMIS.beneficiary')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dfi_region', to='SERMIS.beneficiary')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dfi_settlement', to='SERMIS.beneficiary')),
            ],
            options={
                'verbose_name_plural': 'DFI Non-Farm Details',
            },
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SERMIS.group'),
        ),
    ]
