# Generated by Django 4.2.1 on 2023-09-27 15:11

import TRANSMIS.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=100)),
                ('district', models.CharField(choices=[('Koboko', 'Koboko'), ('Lamwo', 'Lamwo'), ('Isingiro', 'Isingiro'), ('Kamwenge', 'Kamwenge')], max_length=100)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=100)),
                ('nationality', models.CharField(max_length=100)),
                ('household_id', models.CharField(max_length=100)),
                ('name_of_household_head', models.CharField(max_length=100)),
                ('household_head_phone', models.CharField(max_length=100)),
                ('gender_of_participant', models.CharField(max_length=100)),
                ('participant_age', models.IntegerField()),
                ('relationship_with_household_head', models.CharField(max_length=100)),
                ('sex_hhh', models.CharField(max_length=100)),
                ('age_of_hhh', models.IntegerField()),
                ('disablity_of_hhh', models.CharField(max_length=100)),
                ('marital_status', models.CharField(max_length=100)),
                ('education_level', models.CharField(max_length=100)),
                ('religion', models.CharField(max_length=100)),
                ('household_own_any_livestock', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=25)),
                ('group_type', models.CharField(max_length=20)),
                ('nationality_of_members', models.CharField(max_length=15)),
                ('chairperson_name', models.CharField(max_length=25)),
                ('chairperson_gender', models.CharField(max_length=10)),
                ('chairperson_contact', models.CharField(max_length=9)),
                ('alternate_contact', models.CharField(max_length=9)),
                ('district', models.CharField(choices=[('Koboko', 'Koboko'), ('Lamwo', 'Lamwo'), ('Isingiro', 'Isingiro'), ('Kamwenge', 'Kamwenge')], max_length=15)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=20)),
                ('location_status', models.CharField(choices=[('Inside Settlement', 'Inside Settlement'), ('Outside Settlement', 'Outside Settlement')], max_length=25)),
                ('date_formed', models.DateField()),
                ('formation_method', models.CharField(choices=[('Organically formed by community members', 'Organically formed by community members'), ('Formed by an organisation/NGO', 'Formed by an organisation/NGO')], max_length=50)),
                ('total_members', models.PositiveIntegerField()),
                ('male_members', models.PositiveIntegerField()),
                ('female_members', models.PositiveIntegerField()),
                ('num_refugees', models.PositiveIntegerField()),
                ('male_refugees', models.PositiveIntegerField()),
                ('female_refugees', models.PositiveIntegerField()),
                ('num_youth', models.PositiveIntegerField()),
                ('male_youth', models.PositiveIntegerField()),
                ('female_youth', models.PositiveIntegerField()),
                ('num_disabilities', models.PositiveIntegerField()),
                ('received_support_from_wfp', models.CharField(choices=[('Recieved support from WFP', 'Recieved support from WFP'), ('Never recieved support from WFP', 'Never recieved support from WFP')], max_length=50)),
                ('received_assistance_from_other_partner', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('other_partner_assistance', models.CharField(choices=[('ACF', 'ACF'), ('ALIGHT', 'ALIGHT'), ('AVSC', 'AVSC'), ('CONVOID', 'CONVOID'), ('DRDIP', 'DRDIP'), ('Equity Bank', 'Equity Bank'), ('FRC', 'FRC'), ('Government through DRDIP', 'Government through DRDIP'), ('HIJRA', 'HIJRA'), ('HFU', 'HFU'), ('Isingiro DLG', 'Isingiro DLG'), ('Nsamis (pigglets) 2022', 'Nsamis (pigglets) 2022'), ('OPM', 'OPM'), ('OPPORTUNITY BANK', 'OPPORTUNITY BANK'), ('OXFAM', 'OXFAM'), ('RIPPLE EFFECT', 'RIPPLE EFFECT'), ('SACU', 'SACU'), ('SEND A COW', 'SEND A COW'), ('Shared Action Africa', 'Shared Action Africa'), ('UNDP', 'UNDP'), ('Usabiti- Digitalization of savings, records', 'Usabiti- Digitalization of savings, records'), ('VEDCO', 'VEDCO'), ('WFP', 'WFP'), ('UWESO', 'UWESO')], max_length=255)),
                ('support_received', models.CharField(choices=[('Livestock', 'Livestock'), ('Group savings', 'Group savings'), ('credit/loans', 'credit/loans'), ('group farming.', 'group farming.'), ('Savings box', 'Savings box'), ('Book keeping', 'Book keeping'), ('startup capital', 'startup capital'), ('AMS training', 'AMS training'), ('Seedlings/farm inputs', 'Seedlings/farm inputs'), ('Agric/farming training', 'Agric/farming training'), ('VSLA/livelihood training', 'VSLA/livelihood training'), ('GFA', 'GFA')], max_length=50)),
                ('crop_farming', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('animal_farming', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('savings_and_loans', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('involved_in_crafts', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('tech_vocational_skills', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('engaged_in_trading', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('incomes_last_12_months', models.PositiveIntegerField()),
                ('group_assets_value', models.PositiveIntegerField()),
                ('group_loans', models.PositiveIntegerField()),
                ('group_has_bank_account', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('current_incomes', models.PositiveIntegerField()),
                ('gps_for_group', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='SPSAGE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('date', models.DateField()),
                ('Disbursement_date', models.DateField()),
                ('region', models.CharField(choices=[('South West', 'South West'), ('West Nile', 'West Nile'), ('Karamoja', 'Karamoja')], max_length=20)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=20)),
                ('household_beneficiary_name', models.CharField(max_length=25)),
                ('household_beneficiary_age', models.IntegerField(validators=[TRANSMIS.models.SPSAGE.validate_household_beneficiary_age])),
                ('transfer_value', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(999999999)])),
                ('component', models.CharField(default='SP', max_length=3)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.group')),
            ],
            options={
                'verbose_name_plural': 'SAGE Details',
            },
        ),
        migrations.CreateModel(
            name='SPNutricash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('date', models.DateField()),
                ('Disbursement_date', models.DateField()),
                ('region', models.CharField(choices=[('South West', 'South West'), ('West Nile', 'West Nile'), ('Karamoja', 'Karamoja')], max_length=20)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=20)),
                ('household_beneficiary_name', models.CharField(max_length=25)),
                ('pregnant_mother', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=4)),
                ('lactating_mother', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=4)),
                ('transfer_value', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(999999999)])),
                ('component', models.CharField(default='SP', max_length=3)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.group')),
            ],
            options={
                'verbose_name_plural': 'Nutricash Details',
            },
        ),
        migrations.CreateModel(
            name='SPGFA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('date', models.DateField()),
                ('Disbursement_date', models.DateField()),
                ('region', models.CharField(choices=[('South West', 'South West'), ('West Nile', 'West Nile'), ('Karamoja', 'Karamoja')], max_length=20)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=20)),
                ('household_beneficiary_name', models.CharField(max_length=25)),
                ('transfer_value', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(999999999)])),
                ('component', models.CharField(default='SP', max_length=3)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.group')),
            ],
            options={
                'verbose_name_plural': 'GFA Details',
            },
        ),
        migrations.CreateModel(
            name='SEMCSBCC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('date', models.DateField()),
                ('region', models.CharField(choices=[('South West', 'South West'), ('West Nile', 'West Nile'), ('Karamoja', 'Karamoja')], max_length=20)),
                ('district', models.CharField(choices=[('Koboko', 'Koboko'), ('Lamwo', 'Lamwo'), ('Isingiro', 'Isingiro'), ('Kamwenge', 'Kamwenge')], max_length=100)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=100)),
                ('meeting_date', models.DateField()),
                ('topic_of_discussion', models.CharField(choices=[('Gender', 'Gender'), ('WASH', 'WASH'), ('Communication and life skills', 'Communication and life skills')], max_length=100)),
                ('component', models.CharField(default='SEMC', max_length=3)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.group')),
            ],
            options={
                'verbose_name_plural': 'SBCC Details',
            },
        ),
        migrations.CreateModel(
            name='SEMCMentoringCoaching',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('meeting_date', models.DateField()),
                ('region', models.CharField(choices=[('South West', 'South West'), ('West Nile', 'West Nile'), ('Karamoja', 'Karamoja')], max_length=20)),
                ('district', models.CharField(choices=[('Koboko', 'Koboko'), ('Lamwo', 'Lamwo'), ('Isingiro', 'Isingiro'), ('Kamwenge', 'Kamwenge')], max_length=100)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=100)),
                ('mentor_name', models.CharField(max_length=30)),
                ('topic_of_discussion', models.CharField(choices=[('On farm', 'On farm'), ('Non farm', 'Non farm')], max_length=100)),
                ('component', models.CharField(default='SEMC', max_length=3)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.group')),
            ],
            options={
                'verbose_name_plural': 'Mentoring and Coaching Details',
            },
        ),
        migrations.CreateModel(
            name='SEMCCommunityParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('meeting_date', models.DateField()),
                ('region', models.CharField(choices=[('South West', 'South West'), ('West Nile', 'West Nile'), ('Karamoja', 'Karamoja')], max_length=20)),
                ('district', models.CharField(choices=[('Koboko', 'Koboko'), ('Lamwo', 'Lamwo'), ('Isingiro', 'Isingiro'), ('Kamwenge', 'Kamwenge')], max_length=100)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=100)),
                ('topic_of_discussion', models.CharField(choices=[('Gender', 'Gender'), ('WASH', 'WASH'), ('Communication and life skills', 'Communication and life skills')], max_length=100)),
                ('component', models.CharField(default='SEMC', max_length=3)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.group')),
            ],
            options={
                'verbose_name_plural': 'Community Participation Details',
            },
        ),
        migrations.CreateModel(
            name='LPDOnFarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('date', models.DateField()),
                ('Disbursement_date', models.DateField()),
                ('region', models.CharField(choices=[('South West', 'South West'), ('West Nile', 'West Nile'), ('Karamoja', 'Karamoja')], max_length=20)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=20)),
                ('Onfarm_component_received', models.CharField(choices=[('None', 'None'), ('Acquired access to land', 'Acquired access to land'), ('Conducting large scale production (1 acre and above)', 'Conducting large scale production (1 acre and above)'), ('Adoption of climate smart production', 'Adoption of climate smart production'), ('Acquired access to water for production', 'Acquired access to water for production'), ('Conducting back yard gardening', 'Conducting back yard gardening'), ('On-farm PHM practices', 'On-farm PHM practices')], max_length=100, verbose_name='On-Farm Component received')),
                ('component', models.CharField(default='LPD', max_length=3)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.group')),
            ],
            options={
                'verbose_name_plural': 'LPD On-Farm Details',
            },
        ),
        migrations.CreateModel(
            name='LPDOffFarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('date', models.DateField()),
                ('Disbursement_date', models.DateField()),
                ('region', models.CharField(choices=[('South West', 'South West'), ('West Nile', 'West Nile'), ('Karamoja', 'Karamoja')], max_length=20)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=20)),
                ('Offfarm_Software_component_received', models.CharField(choices=[('None', 'None'), ('Training-Post harvest management', 'Training-Post harvest management'), ('Market linkages(Big buyers)', 'Market linkages -Big buyers'), ('Bulking - Storage infrastructure/tonnage', 'Bulking- Storage infrastructure/tonnage')], max_length=100, verbose_name='Software Component received')),
                ('Offfarm_Hardware_component_received', models.CharField(choices=[('None', 'None'), ('Hermetic silos', 'Hermetic silos'), ('Mills', 'Mills'), ('Threshers', 'Threshers'), ('Transport facilities etc', 'Transport facilities etc')], max_length=100, verbose_name='Hardware Component received')),
                ('component', models.CharField(default='LPD', max_length=3)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.group')),
            ],
            options={
                'verbose_name_plural': 'LPD Off-Farm Details',
            },
        ),
        migrations.CreateModel(
            name='LPDNonFarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('date', models.DateField()),
                ('Disbursement_date', models.DateField()),
                ('region', models.CharField(choices=[('South West', 'South West'), ('West Nile', 'West Nile'), ('Karamoja', 'Karamoja')], max_length=20)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=20)),
                ('nonfarm_Software_component_received', models.CharField(choices=[('None', 'None'), ('Skill acquisition training', 'Skill acquisition training'), ('Apprenticeship', 'Apprenticeship')], max_length=100, verbose_name='Software Component received')),
                ('nonOfffarm_Hardware_component_received', models.CharField(choices=[('None', 'None'), ('Start-up capital received', 'Start-up capital received')], max_length=100, verbose_name='Hardware Component received')),
                ('component', models.CharField(default='LPD', max_length=3)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.group')),
            ],
            options={
                'verbose_name_plural': 'LPD Non-Farm Details',
            },
        ),
        migrations.CreateModel(
            name='DFI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('WFP', 'WFP'), ('AFI', 'AFI'), ('KRC', 'KRC'), ('ACF', 'ACF'), ('FHI', 'FHI'), ('MTI', 'MTI'), ('LWF', 'LWF'), ('FHU', 'FHU')], max_length=20)),
                ('date', models.DateField()),
                ('Disbursement_date', models.DateField()),
                ('region', models.CharField(choices=[('South West', 'South West'), ('West Nile', 'West Nile'), ('Karamoja', 'Karamoja')], max_length=20)),
                ('settlement', models.CharField(choices=[('Lobule', 'Lobule'), ('Palabek', 'Palabek'), ('Nakivale', 'Nakivale'), ('Oruchinga', 'Oruchinga'), ('Rwamwanja', 'Rwamwanja')], max_length=20)),
                ('DFI_Software_component_received', models.CharField(choices=[('Basic financial literacy training received', 'Basic financial literacy training received'), ('Advanced financial literacy trainings received', 'Advanced financial literacy trainings received'), ('Digital literacy training received', 'Digital literacy training received')], max_length=100, verbose_name='Software Component received')),
                ('component', models.CharField(default='LPD', max_length=3)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.beneficiary')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.group')),
            ],
            options={
                'verbose_name_plural': 'DFI Non-Farm Details',
            },
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TRANSMIS.group'),
        ),
    ]
